---
layout: post
title:  ZigBee,CC2530配置红外载波
category: technology 
---

# ZigBee应用导读

## 1.设备类型

![Zigbee Network](/images/article/zigbee_network.png)

Zigbee组网设备分为三类：

1.Coordinator。发起网络，并确定PAN ID的设备。一个网里有且只有一个。（图中黑色的节点）组网完成之后退化为Router。

2.Router。（图中红色的节点）管理若干子节点，须一直在线。

3.End-device。（图中白色的节点）可以休眠。

从图中可以看出，zigbee网络是一个网状结构，从图论的角度讲，End-device相当于叶子，而Router相当于枝干。Coordinator在组网的时候，相当于根节点，但是组网一旦完成，整个网络就没有中心了，数据交换是不必通过Coordinator的。从图中还可看出，数据从一个节点到另一个节点，中间会经过多次中继节点的数据交换，因此存在路由算法的问题。

## 2.栈配置类型

简单来说，通常只有栈类型相同的设备之间才能组网。也分为三类：

1.Zigbee。

2.Zigbee PRO。

3.自定义。

## 3.地址

设备地址分为64位的MAC地址和16位的逻辑地址两种，其中前者全球唯一，而后者全网唯一。其中后者的唯一性，由相关地址分配算法和地址冲突机制保证。

## 4.数据包类型

按目的地的不同分为三类：

1.Unicast。发给单独的设备。

2.Multicast。发给一组设备。知识点：Group Addressing

3.Broadcast。全网广播。

按照目的地指派方式的不同可分为直接和间接两种。后者通过查找Binding Table的方式找到目的地的逻辑地址。知识点：Binding的含义，以及Binding Table的实现。

## 5.路由

1. 路由发现、选择和维护相关的规则。

2. 路由表存储及维护

## 5.其他

1. End-device由于移动导致的父节点的更换。

2. PAN ID冲突的解决，以及跨PAN通讯的实现。

3. 无线信道的选择。知识点：侦测环境，确定最小噪声的信道。

# Z-Stack

Z-Stack是德州仪器公司推出的Zigbee协议栈。源代码不公开，仅有如何使用的接口文档。

## 1.消息

Z-Stack的消息分为两大类：系统消息SYS_EVENT_MSG和自定义消息。其中前者又可分为三大类：

1.硬件消息。例如KEY_CHANGE

2.AF消息。主要是和数据的交换和路由相关的消息。例如AF_DATA_CONFIRM_CMD，AF_INCOMING_MSG_CMD。

3.ZDO消息。和具体设备的应用相关的消息。例如ZDO_STATE_CHANGE，ZDO_CB_MSG。

## 组网

1.可以设定Coordinator组网所用的Channel和Pan ID，否则就是随机生成Channel和Pan ID。

2.在指定Channel或Pan ID的情况下，如果已经有网络使用了该Channel或Pan ID，则Coordinator会重新选择一个Channel或Pan ID。但是与之配套的Router和End Device无法侦测到这个改变，因此会加入已有的网络，而不是Coordinator新建的网络。

3.设备可开机自动入网，也可稍后手动入网。入网成功之后，可以保存入网信息。

## 绑定 vs 查找

绑定就是发送方指定接收方。而查找则是接收方注册可以被接受的发送方。

## 事件处理

设计原则：

1.SYS_EVENT_MSG消息需要一次性全部处理完。

2.而其他消息最好一次只处理一条。

sentTransID可用于标识消息，

# CC2530配置红外载波

CC2530是德州仪器公司推出的用于物联网领域的基于8051架构的芯片，支持Zigbee、红外等多种无线通讯方式。本文仅对红外相关的寄存器配置做一个简单说明。

## 1.配置时钟

配置时钟需要配置CLKCONCMD寄存器。但是需要注意的是OSC、TICKSPD和CLKSPD存在就低不就高的特点，所以如果稍有不慎，最终Timer输出的频率就不正确了。

## 2.配置pin复用

pin复用分为3个级别：

1）是GPIO，还是外设？（使用PnSEL选择。）

2）外设布局。（为了方便使用，每个外设都有两套布局，可用PERCFG选择。）

3）外设复用选择。（如果有两个外设，在第2步之后，仍然共用1个pin，则用P2DIR选择究竟用谁。注意只有P0的外设可以选，P1是不行的。）

## 3.配置IR载波

这一步主要是根据载波频率计算相关寄存器的值，主要是TxCCn（其中x表示Timer x，n表示Channel n）的值。

1） 计算Timer 3的值，以38KHz载波为为例：

32000000 / 38000 = 842.1053只是计量单位变为载波周期而已。

这个值是无法直接用8位的寄存器表示的，因此需要首先4分频，也就是

842.1053 = 4 * 210.5263

所以T3CC0=211，如果需要占空比50%的载波的话，T3CC1=105。

这样实际生成的载波频率为：

32000000 / 4 / 211 = 37914.7

2）计算Timer 1的值。

这里需要注意的是，这里T1CCn中配置的值，不再以Timer tick为单位，而是以载波周期为单位。以NEC编码的逻辑1为例，载波周期为560us，整个周期为2.25ms。因此：

37914.7 / (1 / 0.00056) = 21.23

37914.7 / (1 / 0.00225) = 85.31

所以T1CC0=85，T1CC1=21

3）配置其他寄存器

IRCTL=1，打开载波模式。需要注意的是，只要载波模式打开，Timer 1的计量单位就变为载波周期，但只有Channel 1，会调制上载波信号。其他的channel只是计量单位变为载波周期而已。

还有要仔细配置相关的Timer中断，如果没有必要的话，最好把中断都关上。毕竟即使没有中断处理程序，中断还是要消耗CPU的运算资源的。
