---
layout: post
title: David M. Jones的奇遇
category: essay 
---

# David M. Jones的奇遇

David M. Jones是Doolittle Raid的5号机组成员。他在这次行动中的表现，并无特殊之处。所谓奇遇主要指的是他在欧洲战场的表现。

离开中国之后，David M. Jones于1942年9月，被派往北非战场。很快，当年的12月4日，他在战斗中由于飞机被击落而被俘。接着被关押到Stalag Luft III集中营。该集中营主要用于关押盟军的飞行员。

集中营的生活是丰富多彩的，比如下图：

![](/images/article/Chicken_Run.jpg)

再比如下图：

![](/images/article/Model_Stalag_Luft_III.jpg)

上图是Tweedy女士的养鸡场的示意图，呵呵...

好吧，其实它是Stalag Luft III集中营中的一个营区的示意图。（集中营比较大，这样的营区有很多个。）

作为不甘寂寞的飞行员，David M. Jones参与了越狱行动，他负责带队挖地道。

地道挖掘很成功，甚至越狱也部分成功。（计划逃走200人，但第77个人被看守发现了。）然而，和《Chicken Run》的结局不同，战俘们漏算了一件事情：荒郊野岭，夜晚零下的气温，如果不想冻死，只有投降德国人。

最终，越狱成功的只有3人，其余战俘多数又主动投降了德国人。

应该说Luftwaffe（纳粹空军）的声誉还是不错的，Stalag Luft III集中营里的很多人都是越狱惯犯，倘若放在SS管辖的Sobibor，早都被枪毙了。如果是日本的集中营，即使不跑也有很大概率被枪毙。

本来这次被抓，也许就和之前的情况类似，大家继续玩猫和老鼠的游戏。然而，这次事情太大，惊动了元首。元首大笔一挥，处决了其中的50人，即使戈林求情也没用。

David M. Jones没有越狱，所以活到了苏联人解放集中营的时候。凭借着在战俘中的威望，他被苏联人任命为盟军战俘的负责人，并很快回国。

他的事迹被Paul Brickhill改编为小说《The Great Escape》（大逃亡），并于1963年和1981年两次被改编为同名电影。

好莱坞似乎对美国空军拯救世界情有独钟，类似的情节在《Von Ryan's Express》（战俘列车，1965年）和《Chicken Run》（小鸡快跑，2000年）中反复出现，男一号都是美国飞行员。

>注：Stalag Luft III的看守，战后遭到审判。然而由于他们遵守了日内瓦公约，基本都被无罪释放。很多看守甚至和战俘成为了终生的朋友。

>Sobibor的故事可参见《Escape from Sobibor》(1987)

# 世说新语（续）

## 2017.5

![](/images/article/bit_coin.png)

## 2017.6

这里说一下我对赫鲁晓夫的看法，对国内的赫黑做一个批判。

赫鲁晓夫虽然在政治上追随斯大林，在大清洗中，干的很卖力。然而他毕竟不是叶若夫、贝利亚之流，他还是有自己的良心和底线的，比如在乌克兰大饥荒的时候上书斯大林，差点断送了他的政治前程。

此外，赫鲁晓夫参与了苏德战争中最重要的基辅战役、斯大林格勒战役和库尔斯克战役，政治局里的非军人，还没有谁比他的战功大。所以，朱可夫站在他那边，反对莫洛托夫和马林科夫，再正常不过了。

## 2017.7

“他接手的是一个犁耕手种的俄国，而留下的却是装备有原子武器的苏联。”——丘吉尔对斯大林的评价（1959年）

# OpenVX

## Khronos Group

Khronos Group是一个行业组织，创建开放标准以实现并行计算、图形、视觉、传感处理和动态媒体在各种平台和设备上的编写和加速。Khronos标准包括 Vulkan, OpenGL, OpenGL ES, WebGL, OpenCL, SPIR, SYCL, WebCL, OpenVX, EGL, OpenMAX, OpenVG, OpenSL ES, StreamInput, COLLADA 和 glTF。

简单来说，Khronos的任务就是创建一个统一的硬件和软件之间的API，这样无论软件厂商，还是硬件厂商，都能各行其道，互不干扰了。

## 概述

官网：

https://www.khronos.org/openvx/

![](/images/article/openvx.png)

上图给出了OpenVX的主要用途，以及它和Khronos其他兄弟项目之间的关系。

OpenVX本身也是一个系列标准。它包括：

**OpenVX**：一个传统的CV接口。提供包括直方图、Harris、Canny等特征算子的API。

**OpenVX SC（Safety Critical）**：安全版的OpenVX。

**OpenVX NN Extension**：专门用于提供NN加速方面的API。目前主要集中于CNN的加速，即卷积、池化等操作，对其他NN支持有限。此外，这些API主要用于预测，而非训练。

## NNEF

Neural Network Exchange Format是Khronos制定的用于交换NN模型数据的数据格式标准。

官网：

https://www.khronos.org/nnef

# Caffe

Convolutional Architecture for Fast Feature Embedding是贾扬清写的一个深度学习框架。

>注：贾扬清，清华的本硕（2009）+UCB的博士（2014）。先后在Google和Facebook任研究员。知乎名人。   
>个人主页：   
>http://daggerfs.com/

官网：

http://caffe.berkeleyvision.org/

代码：

https://github.com/BVLC/caffe

API：

http://caffe.berkeleyvision.org/doxygen/index.html

## 运行方式

Caffe有两种运行方式：

1.编程式。这种模式也是TensorFlow采用的方式，即直接在main函数中调用Caffe函数。

示例：

examples/cpp_classification/classification.cpp

2.命令行式。这种模式适合于流程比较简单的情况。使用caffe工具加载模板文件进行训练或预测。

示例：

examples/mnist/train_lenet.sh

## 模板文件和模型文件

prototxt：模板文件。定义NN中的层之类的结构。

caffemodel：模型文件。训练好的模型可以放在模型文件中，以便于今后的预测。

## blob

blob是Caffe中用于数据操作和交换的数据结构。简单来说，就是一个4维数组：number,channel,height,width。

## 参考

https://mp.weixin.qq.com/s/-Jn4UbZ6EqRYceJqI1l16g

一文简短介绍Caffe


