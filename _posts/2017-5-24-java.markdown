---
layout: post
title:  Java（二）, 推荐系统的工程细节, Machine Learning之Java篇, 目标检测
category: technology 
---

# Java各集合类的比较 

<table>
<tr>
<th colspan="2"></th>
<th>有序否</th>
<th>允许元素重复否</th>
</tr>
<tr>
<td colspan="2">Collection</td>
<td>否</td>
<td>是</td>
</tr>
<tr>
<td colspan="2">List</td>
<td>是</td>
<td>是</td>
</tr>
<tr>
<td rowspan="3">Set</td>
<td>AbstractSet</td>
<td rowspan="2">否</td>
<td rowspan="3">否</td>
</tr>
<tr>
<td>HashSet</td>
</tr>
<tr>
<td>TreeSet</td>
<td>是（用二叉树排序）</td>
</tr>
<tr>
<td rowspan="3">Map</td>
<td>AbstractMap</td>
<td rowspan="2">否</td>
<td rowspan="3">使用key-value来映射和存储数据，Key必须惟一，value可以重复</td>
</tr>
<tr>
<td>HashMap</td>
</tr>
<tr>
<td>TreeSet</td>
<td>是（用二叉树排序）</td>
</tr>
</table>

# Log4j & SLF4J & Logback

Log4j是Apache的一个开源项目，通过使用Log4j，我们可以控制日志信息输送的目的地是控制台、文件、GUI组件，甚至是套接口服务器、NT的事件记录器、UNIX Syslog守护进程等；我们也可以控制每一条日志的输出格式；通过定义每一条日志信息的级别，我们能够更加细致地控制日志的生成过程。

SLF4J，即简单日志门面（Simple Logging Facade for Java），不是具体的日志解决方案，它只服务于各种各样的日志系统。按照官方的说法，SLF4J是一个用于日志系统的简单Facade，允许最终用户在部署其应用时使用其所希望的日志System。

假设你打算将你使用log4j的产品卖给要求使用JDK 1.4 Logging的用户时，面对成千上万的log4j调用的修改，相信这绝对不是一件轻松的事情。但是如果开始便使用SLF4J，那么这种转换将是非常轻松的事情。

Logback是由log4j创始人设计的另一个开源日志组件。官方网站：

http://logback.qos.ch

上面三者可以组合使用（slf4j+log4j和slf4j+logback），它们的配置文件主要是logback.xml和log4j.properties。

参见：

http://wuyilun2.blog.163.com/blog/static/9853110201111595858365/

# Save/Load序列化对象

代码：

https://github.com/antkillerfarm/antkillerfarm_crazy/blob/master/java/HanLP/KnowlegeModel.java

要点：

1.implements Serializable接口。不但对象本身要实现，它包含的子对象也要实现该接口。

2.save/load函数。

3.不想序列化的成员使用transient关键字修饰。

# 推荐系统的工程细节

推荐系统不仅是算法，还包括若干工程细节。这些细节虽然不算复杂，够不上算法的层面，然而对产品的成败，却有举足轻重的作用。

## 一般架构

![](/images/article/suggest.png)

## 用户数据

用户自然特征：性别，年龄，地域，教育水平，出生日期，职业，星座

用户兴趣特征：兴趣爱好，使用网站，浏览/收藏内容，互动内容，品牌偏好，产品偏好

用户社会特征：婚姻状况，家庭情况，社交/信息渠道偏好

用户消费特征：收入状况，购买力水平，已购商品，购买渠道偏好，最后购买时间，购买频次

## 评价推荐质量

以今日头条类的新闻推荐为例，评估指标一般为：

1. 平均转化率（点击量/曝光量）

2. 人均阅读篇数（点击PV/点击UV）

3. 平均阅读完成率

4. 人均阅读时长（这个会受文章长度影响）

5. 用户互动数据（评论、分享）

对评估指标的选取一般遵循以下原则：

1.用户满意度。

2.预测准确度。

3.覆盖率。

4.多样性。

5.新颖性。

6.惊喜度。

7.信任度。

8.实时性

9.鲁棒性

测试方法一般包括：

A/B测试、双盲交叉验证

需要思考的问题

1.新用户/新商品的冷启动问题。

2.马太效应问题。这在推荐算法中也叫做banana problem。原因是在美国这边的超市，几乎所有人都爱买banana，因为最便宜，也好吃也健康。所以过多的数据量可能会导致一个超市推荐算法疯狂推荐Banana给所有人。

参考：

https://www.zhihu.com/question/26990692

类似今日头条这样的个性化推荐网站怎么评价推荐质量的优劣？

https://www.zhihu.com/question/19660417

为什么那么多牛人成天在研究讨论算法，系统自动推荐的东西还是不能令人满意呢？

## 术语

GMV (Gross Merchandise Volume) 成交额

![](/images/article/pv.jpg)

# Machine Learning之Java篇

http://machinelearningmastery.com/java-machine-learning/

这篇文章包含了很多Machine Learning方面的软件和库。

## ND4J

numpy的等价物。

http://nd4j.org/

## DL4J

TensorFlow的等价物。

https://deeplearning4j.org/

## Joinery

Pandas的等价物。

https://github.com/cardillo/joinery

## Weka

Weka是一款开源的机器学习以及数据挖掘软件。主要开发者来自新西兰的the University of Waikato。

官网：

http://www.cs.waikato.ac.nz/ml/weka/

Weka不仅有GUI，而且也为开发提供了API，是单机Machine Learning的Java首选。国内的京东用的比较多。

GitHub：

https://github.com/bnjmn/weka

API Doc：

http://weka.sourceforge.net/doc.stable-3-8/

Weka除了基本库之外，还有许多扩展包：

http://weka.sourceforge.net/packageMetaData/

参考：

https://weka.wikispaces.com/Use+Weka+in+your+Java+code

如何在Java代码中使用Weka

## ELKI

ELKI是另一个数据挖掘软件，也有GUI和API。ELKI主要专注于聚类和异常检测算法。

官网：

https://elki-project.github.io/algorithms/

GitHub：

https://github.com/elki-project/elki

## java-string-similarity

这个库虽然功能有限，但却针对字符处理进行了优化。比如Jaccard距离，weka没有实现，ELKI提供的是通用的集合类实现，用起来没有java-string-similarity方便。

官网：

https://github.com/tdebatty/java-string-similarity

## LDA4j

https://github.com/hankcs/LDA4j

## YTK

猿题库开源了两个Java的库：

https://github.com/yuantiku/ytk-learn

https://github.com/yuantiku/ytk-mp4j

# 目标检测

object detection是计算机视觉的一个重要的分支。类似的分支还有目标分割、目标识别和目标跟踪。

以下摘录Sensetime CTO曹旭东的解读：

传统方法使用滑动窗口的框架，把一张图分解成几百万个不同位置不同尺度的子窗口，针对每一个窗口使用分类器判断是否包含目标物体。传统方法针对不同的类别的物体，一般会设计不同的特征和分类算法，比如人脸检测的经典算法是**Harr特征+Adaboosting分类器**；行人检测的经典算法是**HOG(histogram of gradients)+Support Vector Machine**；一般性物体的检测的话是**HOG特征+DPM(deformable part model)的算法**。

基于深度学习的物体检测的经典算法是RCNN系列：RCNN，fast RCNN(Ross Girshick)，faster RCNN(少卿、凯明、孙剑、Ross)。这三个工作的核心思想是分别是：使用更好的CNN模型判断候选区域的类别；复用预计算的sharing feature map加快模型训练和物体检测的速度；进一步使用sharing feature map大幅提高计算候选区域的速度。其实基于深度学习的物体检测也可以看成对海量滑动窗口分类，只是用全卷积的方式。

RCNN系列算法还是将物体检测分为两个步骤。现在还有一些工作是端到端(end-to-end)的物体检测，比如说YOLO(You Only Look Once: Unified, Real-Time Object Detection)和SSD(SSD: Single Shot MultiBox Detector)这样的算法。这两个算法号称和faster RCNN精度相似但速度更快。物体检测正负样本极端非均衡，two-stage cascade可以更好的应对非均衡。端到端学习是否可以超越faster RCNN还需要更多研究实验。

参考：

https://www.zhihu.com/question/34223049

从近两年的CVPR会议来看，目标检测的研究方向是怎么样的？

https://zhuanlan.zhihu.com/p/21533724

对话CVPR2016：目标检测新进展

https://mp.weixin.qq.com/s/r9tXvKIN-eqKW_65yFyOew

谷歌开源TensorFlow Object Detection API

## YOLO

YOLO: Real-Time Object Detection，是一个基于神经网络的实时对象检测软件。

官网：

https://pjreddie.com/darknet/yolo/

## SSD

论文：

《SSD: Single Shot MultiBox Detector》

参考：

http://www.jianshu.com/p/ebebfcd274e6

Caffe-SSD 训练自己的数据集教程

# NLP参考资源

http://www.jiqizhixin.com/article/2727

ACL 2017中国研究论文解读：读懂中国自然语言处理前沿进展

https://mp.weixin.qq.com/s/ssWi6XIebW8M6_JePG7RZg

微软的NLP帝国

http://blog.csdn.net/lcj369387335/article/details/69845385

自动文档摘要评价方法---Edmundson和ROUGE

https://github.com/lianwj/cnn-text-classification-tf

Convolutional Neural Network for Text Classification in Tensorflow

http://blog.csdn.net/skytree/article/details/43672627

2013年7月做的一个自动应答机器人的架构

https://mp.weixin.qq.com/s/mq0PdX6oB2kr_5FyoLA4ug

机器人数学考了134分，要上清华北大NLP是最大难关

http://www.jeyzhang.com/cnn-apply-on-modelling-sentence.html

卷积神经网络(CNN)在句子建模上的应用

https://mp.weixin.qq.com/s/uRR4Vh3PC8SFw-PD9FQLpw

命名实体识别（NER）的二三事

http://shiyanjun.cn/archives/548.html

使用libsvm+tfidf实现文本分类

http://licstar.net/archives/328

词向量和语言模型

http://www.toutiao.com/a6236100205026328834/

深度学习：推动NLP领域发展的新引擎

http://dataunion.org/9331.html

深度学习、自然语言处理和表征方法

https://www.zhihu.com/question/46272554

如何评价SyntaxNet

https://mp.weixin.qq.com/s/-y2vth2OGx9rAsPvEknVTg

神经网络结构在命名实体识别（NER）中的应用

https://mp.weixin.qq.com/s/PxyazOPKV3eB-qat8hM9ZQ

神经网络语义匹配技术

https://mp.weixin.qq.com/s/JgQAMknL4x7nMONzZua7tg

深度学习要多深，才能读懂人话？阿里小蜜前沿探索

https://mp.weixin.qq.com/s/yN0lOmA0XmqIntqLgwn-TQ

我们眼中的“关系抽取”

http://www.jianshu.com/p/f45c3540c56e

Chatbot 架构

https://mp.weixin.qq.com/s/0Jz_BSe6DI29gvWiy7poBw

基于深度学习和经典方法的文本分类

https://mp.weixin.qq.com/s/6cTG9347dOLxiUs_-tdpnQ

百度开源：语义匹配应用介绍和源代码

https://mp.weixin.qq.com/s/zfgx2iViwFm-tzBGvgHVuw

百度开源：语义表示应用介绍和源代码

https://mp.weixin.qq.com/s/CxpyMUPnKFCTpw6WgG0kqg

依存句法分析的任务以及形式化定义

http://www.csdn.net/article/2015-02-05/2823865

让机器搞懂100万种隐含语义，腾讯Peacock大规模主题模型首次全揭秘


