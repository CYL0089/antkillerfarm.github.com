---
layout: post
title:  Caffe, 推荐系统的工程细节
category: AI 
---

# Caffe

Convolutional Architecture for Fast Feature Embedding是贾扬清写的一个深度学习框架。

>注：贾扬清，清华的本硕（2009）+UCB的博士（2014）。先后在Google和Facebook任研究员。知乎名人。   
>个人主页：   
>http://daggerfs.com/

官网：

http://caffe.berkeleyvision.org/

代码：

https://github.com/BVLC/caffe

API：

http://caffe.berkeleyvision.org/doxygen/index.html

## 运行方式

Caffe有两种运行方式：

1.编程式。这种模式也是TensorFlow采用的方式，即直接在main函数中调用Caffe函数。

示例：

examples/cpp_classification/classification.cpp

2.命令行式。这种模式适合于流程比较简单的情况。使用caffe工具加载模板文件进行训练或预测。

示例：

examples/mnist/train_lenet.sh

## 文件存储

prototxt：模板文件。定义NN中的层之类的结构。

从阅读习惯上，我们浏览一个NN结构，通常是从input到output。prototxt文件的组织也采用了这样的顺序。然而和通常描述上下访问关系的顺序（从上到下）不同，Caffe认为input在最底部，所以input结点只有top属性。

复杂网络的prototxt往往不止一个：

1.Solver。用于设置训练时的参数。

2.Train。用于描述训练时的网络结构。

3.Deploy。用于描述部署时的网络结构。

caffemodel：模型文件。训练好的模型可以放在模型文件中，以便于今后的预测。

除了模板文件和模型文件之外，有的时候训练样本也需要打包存储，以防止小文件过多导致的IO速度问题。

Caffe生成的数据分为2种格式：Lmdb和Leveldb。它们都是键/值对（Key/Value Pair）嵌入式数据库管理系统编程库。

参考：

http://www.cnblogs.com/yymn/p/4479216.html

Caffe1——Mnist数据集创建lmdb或leveldb类型的数据

https://github.com/BVLC/caffe/wiki/Model-Zoo

Caffe官网上有个Model Zoo，可从中获得一些经典模型的模板文件和模型文件。

https://github.com/soeaver/caffe-model

另一个网友版Model Zoo

## prototxt文件的可视化

1.使用在线工具netscope。

https://ethereon.github.io/netscope/quickstart.html

2.使用自带draw_net.py脚本。

参考：

http://www.cnblogs.com/zjutzz/p/5955218.html

caffe绘制网络结构图

http://yanglei.me/gen_proto/

另一个在线工具。

## 术语

**blob**：Caffe中用于数据操作和交换的数据结构。简单来说，就是一个4维数组，格式如下表所示：

| 名称 | 格式 | 
|:--:|:--:|
| Caffe | number,channel,height,width |
| TensorFlow | number,height,width,channel |
| OpenVX | width,height,channel,number |

>注：在API层面，Caffe和OpenVX顺序完全相反，但是由于OpenVX是列优先存储，因此在内存存储方面，两者的格式正好完全一致。

**lr_mult**：学习率因子。基数是solver在运行时采用的学习率。

**decay_mult**：衰减因子。基数含义同上。

lr_mult参数和decay_mult参数的存在，允许不同的层有不同的学习率或衰减率。

在一个卷积层中，通常会有2组lr_mult参数和decay_mult参数，其中前一组是weight参数的学习率或衰减率，而后一组是bias参数的。

{% highlight txt %}
param {
    lr_mult: 1
    decay_mult: 1
}
param {
    lr_mult: 2
    decay_mult: 0
}
{% endhighlight %}

上面这组参数被实践证明，是比较work的参数。

**flatten**：将n * c * h * w的blob，转换成n * (c * h * w)的结构。

**crop**：Crop层的输入（bottom blobs）有两个，让我们假设为A和B，输出（top）为C。

A：要进行裁切的bottom。

B：裁切的参考输入。

参数：axis=1，offset=（25,128,128）

C：**C = A[: , 25: 25+B.shape[1] , 128: 128+B.shape[2] , 128: 128+B.shape[3] ]**

## 代码

Caffe的代码相对比较简单，符合个人作品的特点。

Caffe没有计算图的概念，所有操作都聚焦于NN本身，对于实际业务的支持有限。其结构主要针对CNN进行设计，通用性无法和TensorFlow相比。但相对简单的结构，非常适合CV用途，成为了目前CV DL的事实标准。

## Ristretto Caffe

Ristretto Caffe是一个caffe扩展，支持fp16和int8等特殊格式的数据的转换和运算。

官网：

http://lepsucd.com/?page_id=621

代码：

https://github.com/pmgysel/caffe

## 参考

https://mp.weixin.qq.com/s/-Jn4UbZ6EqRYceJqI1l16g

一文简短介绍Caffe

http://blog.csdn.net/haluoluo211/article/details/77918156

caffe python图片训练识别实例

https://mp.weixin.qq.com/s/XxPsbTSiE1M4hIoH0bg0lA

caffe-orc主流ocr算法：CNN+BLSTM+CTC架构实现

## Caffe2

2017.4，贾扬清推出了全新设计的Caffe2。由于是全新设计，Caffe2和Caffe不兼容，完全可看为是一个新的DL框架。

官网：

https://caffe2.ai/

# 推荐系统的工程细节

推荐系统不仅是算法，还包括若干工程细节。这些细节虽然不算复杂，够不上算法的层面，然而对产品的成败，却有举足轻重的作用。

## 一般架构

![](/images/article/suggest.png)

## 用户数据

用户自然特征：性别，年龄，地域，教育水平，出生日期，职业，星座

用户兴趣特征：兴趣爱好，使用网站，浏览/收藏内容，互动内容，品牌偏好，产品偏好

用户社会特征：婚姻状况，家庭情况，社交/信息渠道偏好

用户消费特征：收入状况，购买力水平，已购商品，购买渠道偏好，最后购买时间，购买频次

## 评价推荐质量

以今日头条类的新闻推荐为例，评估指标一般为：

1. 平均转化率（点击量/曝光量）

2. 人均阅读篇数（点击PV/点击UV）

3. 平均阅读完成率

4. 人均阅读时长（这个会受文章长度影响）

5. 用户互动数据（评论、分享）

对评估指标的选取一般遵循以下原则：

1.用户满意度。

2.预测准确度。

3.覆盖率。

4.多样性。

5.新颖性。

6.惊喜度。

7.信任度。

8.实时性

9.鲁棒性

测试方法一般包括：

A/B测试、双盲交叉验证

需要思考的问题

1.新用户/新商品的冷启动问题。

2.马太效应问题。这在推荐算法中也叫做banana problem。原因是在美国这边的超市，几乎所有人都爱买banana，因为最便宜，也好吃也健康。所以过多的数据量可能会导致一个超市推荐算法疯狂推荐Banana给所有人。

PS：NLP领域的TF-IDF算法可有效防止马太效应问题。

参考：

https://www.zhihu.com/question/26990692

类似今日头条这样的个性化推荐网站怎么评价推荐质量的优劣？

https://www.zhihu.com/question/19660417

为什么那么多牛人成天在研究讨论算法，系统自动推荐的东西还是不能令人满意呢？

## 术语

GMV (Gross Merchandise Volume) 成交额

![](/images/article/pv.jpg)

Click-Through-Rate, 网络广告（图片广告/文字广告/关键词广告/排名广告/视频广告等）的点击到达率，即该广告的点击量（严格的来说，可以是到达目标页面的数量）除以广告的浏览量（PV- Page View）。


